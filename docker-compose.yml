version: '3'

# service description
services:

  # traefik reverse proxy server
  traefik-server:
    image: traefik:latest
    container_name: traefik-server
    hostname: traefik-server
    restart: unless-stopped
    ports:
      # http & https port
      - "80:80"
      - "443:443"
    networks:
      - traefik-net
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./config/traefik.yml:/traefik.yml:ro
      - ./config/dynamic-config:/dynamic-config:ro
      - ./config/certs/acme.json:/acme.json
    environment:
      - "CF_DNS_API_TOKEN=${TRAEFIK_CONT_CF_DNS_API_TOKEN}"
      - "CF_ZONE_API_TOKEN=${TRAEFIK_CONT_CF_ZONE_API_TOKEN}"
    labels:
      # enable traefik
      - "traefik.enable=true"
      - "traefik.docker.network=traefik-net"
      # http endpoint
      - "traefik.http.routers.traefik-web.entrypoints=web"
      - "traefik.http.routers.traefik-web.rule=Host(`${TRAEFIK_CONT_WEB_UI_URL}`)"
      - "traefik.http.routers.traefik-web.middlewares=traefik-websecure-redir"
      # https endpoint
      - "traefik.http.routers.traefik-websecure.entrypoints=websecure"
      - "traefik.http.routers.traefik-websecure.rule=Host(`${TRAEFIK_CONT_WEB_UI_URL}`)"
      - "traefik.http.routers.traefik-websecure.tls=true"
      - "traefik.http.routers.traefik-websecure.tls.certresolver=lets-encrypt"
      - "traefik.http.routers.traefik-websecure.middlewares=traefik-websecure-auth"
      - "traefik.http.routers.traefik-websecure.service=api@internal"
      # middlewares
      - "traefik.http.middlewares.traefik-websecure-redir.redirectscheme.scheme=https"
      - "traefik.http.middlewares.traefik-websecure-auth.basicauth.users=${TRAEFIK_CONT_BASIC_AUTH}"


# networks to use
networks:

  # traefik reverse proxy network
  traefik-net:
    external: true